<?php return array (
  'unique_key' => 'name',
  'preserve_keys' => false,
  'update_object' => true,
  'namespace' => 'getreqparam',
  'resolve' => NULL,
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '1530397dc4c3580005c35cbc43e3ebca',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '6f48966c074a62544e519131283f79d6',
  'native_key' => 0,
  'object' => '{"id":0,"name":"getReqParam","description":"Grabs a value from a PHP Superglobal array.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * getReqParam\\n *\\n * Copyright 2010 by Shaun McCormick <shaun@collabpad.com>\\n *\\n * getReqParam is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * getReqParam is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * getReqParam; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package getreqparam\\n *\\/\\n\\/**\\n * Returns a parameter from the php request object or other globals.\\n *\\n * @author Shaun McCormick <shaun@collabpad.com>\\n * @license GPLv2\\n * @param string $name The name of the variable.\\n * @param string $type The type of request. Defaults to GET.\\n * @package getreqparam\\n *\\n * Works with Revolution 2.0.0.\\n *\\/\\nif (empty($modx) || empty($scriptProperties[\'name\']) || empty($scriptProperties[\'type\'])) return null;\\n\\n$name = $scriptProperties[\'name\'];\\n$type = !empty($scriptProperties[\'type\']) ? $scriptProperties[\'type\'] : \'GET\';\\n\\nswitch ($type) {\\n    case \'SERVER\':\\n        return isset($_SERVER[$name]) ? $_SERVER[$name] : null;\\n        break;\\n    case \'POST\':\\n        return isset($_POST[$name]) ? $_POST[$name] : null;\\n        break;\\n    case \'FILES\':\\n        return isset($_FILES[$name]) ? $_FILES[$name] : null;\\n        break;\\n    case \'COOKIE\':\\n        return isset($_COOKIE[$name]) ? $_COOKIE[$name] : null;\\n        break;\\n    case \'SESSION\':\\n        return isset($_SESSION[$name]) ? $_SESSION[$name] : null;\\n        break;\\n    case \'REQUEST\':\\n        return isset($_REQUEST[$name]) ? $_REQUEST[$name] : null;\\n        break;\\n    case \'GET\':\\n    default:\\n        return isset($_GET[$name]) ? $_GET[$name] : null;\\n        break;\\n}\\nreturn null;","locked":0,"properties":"a:2:{s:4:\\"name\\";a:5:{s:4:\\"name\\";s:4:\\"name\\";s:4:\\"desc\\";s:25:\\"The name of the variable.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";}s:4:\\"type\\";a:5:{s:4:\\"name\\";s:4:\\"type\\";s:4:\\"desc\\";s:35:\\"The superglobal array to grab from.\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:8:{i:0;a:2:{s:4:\\"text\\";s:3:\\"GET\\";s:5:\\"value\\";s:3:\\"GET\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"POST\\";s:5:\\"value\\";s:4:\\"POST\\";}i:2;a:2:{s:4:\\"text\\";s:7:\\"REQUEST\\";s:5:\\"value\\";s:7:\\"REQUEST\\";}i:3;a:2:{s:4:\\"text\\";s:7:\\"SESSION\\";s:5:\\"value\\";s:7:\\"SESSION\\";}i:4;a:2:{s:4:\\"text\\";s:6:\\"SERVER\\";s:5:\\"value\\";s:6:\\"SERVER\\";}i:5;a:2:{s:4:\\"text\\";s:3:\\"ENV\\";s:5:\\"value\\";s:3:\\"ENV\\";}i:6;a:2:{s:4:\\"text\\";s:6:\\"COOKIE\\";s:5:\\"value\\";s:6:\\"COOKIE\\";}i:7;a:2:{s:4:\\"text\\";s:5:\\"FILES\\";s:5:\\"value\\";s:5:\\"FILES\\";}}s:5:\\"value\\";s:3:\\"GET\\";}}","moduleguid":""}',
);