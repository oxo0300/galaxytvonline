<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      'c7e3970ecc34fb9cb387d1bc2852d922' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":0,"property_preprocess":0,"name":"galAlbumRowTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+showName:notempty=`[[+name]]`]]<\\/a><\\/li>","locked":0,"properties":"","static":0,"static_file":"","content":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+showName:notempty=`[[+name]]`]]<\\/a><\\/li>"}',
        'guid' => '2160f9559fa001b7819239a94b13f2fd',
        'native_key' => 0,
        'signature' => '940fa90079653f2320f2409b1db4cb60',
      ),
      '1a319af4fb0233c1339e5cd62e0aacdb' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"galItemThumb","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"[[+cls]]\\">\\n    <a href=\\"[[+linkToImage:if=`[[+linkToImage]]`:is=`1`:then=`[[+image_absolute]]`:else=`[[~[[*id]]?\\n            &[[+imageGetParam]]=`[[+id]]`\\n            &[[+albumRequestVar]]=`[[+album]]`\\n            &[[+tagRequestVar]]=`[[+tag]]` ]]`]]\\" title=\\"[[+name]]\\" [[+link_attributes]]>\\n\\n        <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n    <\\/a>\\n<\\/div>","locked":0,"properties":"","static":0,"static_file":"","content":"<div class=\\"[[+cls]]\\">\\n    <a href=\\"[[+linkToImage:if=`[[+linkToImage]]`:is=`1`:then=`[[+image_absolute]]`:else=`[[~[[*id]]?\\n            &[[+imageGetParam]]=`[[+id]]`\\n            &[[+albumRequestVar]]=`[[+album]]`\\n            &[[+tagRequestVar]]=`[[+tag]]` ]]`]]\\" title=\\"[[+name]]\\" [[+link_attributes]]>\\n\\n        <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n    <\\/a>\\n<\\/div>"}',
        'guid' => '5073d46e2716f9b53deb96acd2fd2f70',
        'native_key' => 1,
        'signature' => '75240ecd0e47f09d962e140eaf999dbb',
      ),
    ),
    'Snippets' => 
    array (
      '1b1fbf3fc6ca4635281a557508c1a8bf' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":0,"property_preprocess":0,"name":"Gallery","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * The main Gallery snippet.\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * \\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n$modx->lexicon->load(\'gallery:web\');\\n\\n\\/* check for REQUEST vars if property set *\\/\\n$imageGetParam = $modx->getOption(\'imageGetParam\',$scriptProperties,\'galItem\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\nif ($modx->getOption(\'checkForRequestAlbumVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$albumRequestVar])) $scriptProperties[\'album\'] = $_REQUEST[$albumRequestVar];\\n}\\nif ($modx->getOption(\'checkForRequestTagVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$tagRequestVar])) $scriptProperties[\'tag\'] = $_REQUEST[$tagRequestVar];\\n}\\nif (empty($scriptProperties[\'album\']) && empty($scriptProperties[\'tag\'])) return \'\';\\n\\n$data = $modx->call(\'galItem\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* load plugins *\\/\\n$plugin = $modx->getOption(\'plugin\',$scriptProperties,\'\');\\nif (!empty($plugin)) {\\n    $pluginPath = $modx->getOption(\'pluginPath\',$scriptProperties,\'\');\\n    if (empty($pluginPath)) {\\n        $pluginPath = $gallery->config[\'modelPath\'].\'gallery\\/plugins\\/\';\\n    }\\n    \\/** @var GalleryPlugin $plugin *\\/\\n    if (($className = $modx->loadClass($plugin,$pluginPath,true,true))) {\\n        $plugin = new $className($gallery,$scriptProperties);\\n        $plugin->load();\\n        $scriptProperties = $plugin->adjustSettings($scriptProperties);\\n    } else {\\n        return $modx->lexicon(\'gallery.plugin_err_load\',array(\'name\' => $plugin,\'path\' => $pluginPath));\\n    }\\n} else {\\n    if ($modx->getOption(\'useCss\',$scriptProperties,true)) {\\n        $modx->regClientCSS($gallery->config[\'cssUrl\'].\'web.css\');\\n    }\\n}\\n\\n\\/* iterate *\\/\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n$idx = 0;\\n$output = array();\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$filesPath = $modx->call(\'galAlbum\',\'getFilesPath\',array(&$modx));\\n$itemCls = $modx->getOption(\'itemCls\',$scriptProperties,\'gal-item\');\\n$imageAttributes = $modx->getOption(\'imageAttributes\',$scriptProperties,\'\');\\n$linkAttributes = $modx->getOption(\'linkAttributes\',$scriptProperties,\'\');\\n$linkToImage = $modx->getOption(\'linkToImage\',$scriptProperties,false);\\n$activeCls = $modx->getOption(\'activeCls\',$scriptProperties,\'gal-item-active\');\\n$highlightItem = $modx->getOption($imageGetParam,$_REQUEST,false);\\n\\/** @var galItem $item *\\/\\nforeach ($data[\'items\'] as $item) {\\n    $itemArray = $item->toArray();\\n    $itemArray[\'idx\'] = $idx;\\n    $itemArray[\'cls\'] = $itemCls;\\n    if ($itemArray[\'id\'] == $highlightItem) {\\n        $itemArray[\'cls\'] .= \' \'.$activeCls;\\n    }\\n    $itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n    $itemArray[\'image_absolute\'] = $filesUrl.$item->get(\'filename\');\\n    $itemArray[\'fileurl\'] = $itemArray[\'image_absolute\'];\\n    $itemArray[\'filepath\'] = $filesPath.$item->get(\'filename\');\\n    $itemArray[\'filesize\'] = $item->get(\'filesize\');\\n    $itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n    $itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n    $itemArray[\'image_attributes\'] = $imageAttributes;\\n    $itemArray[\'link_attributes\'] = $linkAttributes;\\n    if (!empty($scriptProperties[\'album\'])) $itemArray[\'album\'] = $scriptProperties[\'album\'];\\n    if (!empty($scriptProperties[\'tag\'])) $itemArray[\'tag\'] = $scriptProperties[\'tag\'];\\n    $itemArray[\'linkToImage\'] = $linkToImage;\\n    $itemArray[\'url\'] = $item->get(\'url\');\\n    $itemArray[\'imageGetParam\'] = $imageGetParam;\\n    $itemArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tag\'] = \'\';\\n    if ($plugin) {\\n        $plugin->renderItem($itemArray);\\n    }\\n\\n    $output[] = $gallery->getChunk($modx->getOption(\'thumbTpl\',$scriptProperties,\'galItemThumb\'),$itemArray);\\n    $idx++;\\n}\\n$output = implode(\\"\\\\n\\",$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'thumbnails\' => $output,\\n        \'album_name\' => $data[\'album\'][\'name\'],\\n        \'album_description\' => $data[\'album\'][\'description\'],\\n        \'albumRequestVar\' => $albumRequestVar,\\n        \'albumId\' => $data[\'album\'][\'id\'],\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\n\\/* set to placeholders or output directly *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->toPlaceholders(array(\\n        $toPlaceholder => $output,\\n        $toPlaceholder.\'.id\' => $data[\'album\'][\'id\'],\\n        $toPlaceholder.\'.name\' => $data[\'album\'][\'name\'],\\n        $toPlaceholder.\'.description\' => $data[\'album\'][\'description\'],\\n        $toPlaceholder.\'.total\' => $data[\'total\'],\\n    ));\\n} else {\\n    $placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'gallery.\');\\n    $modx->toPlaceholders(array(\\n        $placeholderPrefix.\'id\' => $data[\'album\'][\'id\'],\\n        $placeholderPrefix.\'name\' => $data[\'album\'][\'name\'],\\n        $placeholderPrefix.\'description\' => $data[\'album\'][\'description\'],\\n        $placeholderPrefix.\'total\' => $data[\'total\'],\\n    ));\\n    return $output;\\n}\\nreturn \'\';","locked":0,"properties":"a:32:{s:5:\\"album\\";a:7:{s:4:\\"name\\";s:5:\\"album\\";s:4:\\"desc\\";s:18:\\"gallery.album_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tag\\";a:7:{s:4:\\"name\\";s:3:\\"tag\\";s:4:\\"desc\\";s:16:\\"gallery.tag_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"plugin\\";a:7:{s:4:\\"name\\";s:6:\\"plugin\\";s:4:\\"desc\\";s:19:\\"gallery.plugin_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"pluginPath\\";a:7:{s:4:\\"name\\";s:10:\\"pluginPath\\";s:4:\\"desc\\";s:23:\\"gallery.pluginpath_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbTpl\\";a:7:{s:4:\\"name\\";s:8:\\"thumbTpl\\";s:4:\\"desc\\";s:21:\\"gallery.thumbtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"galItemThumb\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:25:\\"gallery.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"itemCls\\";a:7:{s:4:\\"name\\";s:7:\\"itemCls\\";s:4:\\"desc\\";s:22:\\"gallery.activecls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"gal-item-active\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:26:\\"gallery.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:23:\\"gallery.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:24:\\"gallery.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:26:\\"gallery.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:21:\\"gallery.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:25:\\"gallery.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:28:\\"gallery.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"linkToImage\\";a:7:{s:4:\\"name\\";s:11:\\"linkToImage\\";s:4:\\"desc\\";s:24:\\"gallery.linktoimage_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageGetParam\\";a:7:{s:4:\\"name\\";s:13:\\"imageGetParam\\";s:4:\\"desc\\";s:26:\\"gallery.imagegetparam_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galItem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"imageWidth\\";a:7:{s:4:\\"name\\";s:10:\\"imageWidth\\";s:4:\\"desc\\";s:23:\\"gallery.imagewidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:500;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"imageHeight\\";a:7:{s:4:\\"name\\";s:11:\\"imageHeight\\";s:4:\\"desc\\";s:24:\\"gallery.imageheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:500;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"imageZoomCrop\\";s:4:\\"desc\\";s:26:\\"gallery.imagezoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"imageFar\\";a:7:{s:4:\\"name\\";s:8:\\"imageFar\\";s:4:\\"desc\\";s:21:\\"gallery.imagefar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"imageQuality\\";a:7:{s:4:\\"name\\";s:12:\\"imageQuality\\";s:4:\\"desc\\";s:25:\\"gallery.imagequality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"imageProperties\\";a:7:{s:4:\\"name\\";s:15:\\"imageProperties\\";s:4:\\"desc\\";s:28:\\"gallery.imageproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"sort\\";a:7:{s:4:\\"name\\";s:4:\\"sort\\";s:4:\\"desc\\";s:17:\\"gallery.sort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"dir\\";a:7:{s:4:\\"name\\";s:3:\\"dir\\";s:4:\\"desc\\";s:16:\\"gallery.dir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:18:\\"gallery.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:18:\\"gallery.start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:25:\\"gallery.showinactive_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"checkForRequestAlbumVar\\";a:7:{s:4:\\"name\\";s:23:\\"checkForRequestAlbumVar\\";s:4:\\"desc\\";s:36:\\"gallery.checkforrequestalbumvar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:28:\\"gallery.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"checkForRequestTagVar\\";a:7:{s:4:\\"name\\";s:21:\\"checkForRequestTagVar\\";s:4:\\"desc\\";s:34:\\"gallery.checkforrequesttagvar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tagRequestVar\\";a:7:{s:4:\\"name\\";s:13:\\"tagRequestVar\\";s:4:\\"desc\\";s:26:\\"gallery.tagrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"galTag\\";s:7:\\"lexicon\\";N;s:4:\\"area\\";s:0:\\"\\";}s:6:\\"useCss\\";a:7:{s:4:\\"name\\";s:6:\\"useCss\\";s:4:\\"desc\\";s:19:\\"gallery.usecss_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * The main Gallery snippet.\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * \\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n$modx->lexicon->load(\'gallery:web\');\\n\\n\\/* check for REQUEST vars if property set *\\/\\n$imageGetParam = $modx->getOption(\'imageGetParam\',$scriptProperties,\'galItem\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\nif ($modx->getOption(\'checkForRequestAlbumVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$albumRequestVar])) $scriptProperties[\'album\'] = $_REQUEST[$albumRequestVar];\\n}\\nif ($modx->getOption(\'checkForRequestTagVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$tagRequestVar])) $scriptProperties[\'tag\'] = $_REQUEST[$tagRequestVar];\\n}\\nif (empty($scriptProperties[\'album\']) && empty($scriptProperties[\'tag\'])) return \'\';\\n\\n$data = $modx->call(\'galItem\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* load plugins *\\/\\n$plugin = $modx->getOption(\'plugin\',$scriptProperties,\'\');\\nif (!empty($plugin)) {\\n    $pluginPath = $modx->getOption(\'pluginPath\',$scriptProperties,\'\');\\n    if (empty($pluginPath)) {\\n        $pluginPath = $gallery->config[\'modelPath\'].\'gallery\\/plugins\\/\';\\n    }\\n    \\/** @var GalleryPlugin $plugin *\\/\\n    if (($className = $modx->loadClass($plugin,$pluginPath,true,true))) {\\n        $plugin = new $className($gallery,$scriptProperties);\\n        $plugin->load();\\n        $scriptProperties = $plugin->adjustSettings($scriptProperties);\\n    } else {\\n        return $modx->lexicon(\'gallery.plugin_err_load\',array(\'name\' => $plugin,\'path\' => $pluginPath));\\n    }\\n} else {\\n    if ($modx->getOption(\'useCss\',$scriptProperties,true)) {\\n        $modx->regClientCSS($gallery->config[\'cssUrl\'].\'web.css\');\\n    }\\n}\\n\\n\\/* iterate *\\/\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n$idx = 0;\\n$output = array();\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$filesPath = $modx->call(\'galAlbum\',\'getFilesPath\',array(&$modx));\\n$itemCls = $modx->getOption(\'itemCls\',$scriptProperties,\'gal-item\');\\n$imageAttributes = $modx->getOption(\'imageAttributes\',$scriptProperties,\'\');\\n$linkAttributes = $modx->getOption(\'linkAttributes\',$scriptProperties,\'\');\\n$linkToImage = $modx->getOption(\'linkToImage\',$scriptProperties,false);\\n$activeCls = $modx->getOption(\'activeCls\',$scriptProperties,\'gal-item-active\');\\n$highlightItem = $modx->getOption($imageGetParam,$_REQUEST,false);\\n\\/** @var galItem $item *\\/\\nforeach ($data[\'items\'] as $item) {\\n    $itemArray = $item->toArray();\\n    $itemArray[\'idx\'] = $idx;\\n    $itemArray[\'cls\'] = $itemCls;\\n    if ($itemArray[\'id\'] == $highlightItem) {\\n        $itemArray[\'cls\'] .= \' \'.$activeCls;\\n    }\\n    $itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n    $itemArray[\'image_absolute\'] = $filesUrl.$item->get(\'filename\');\\n    $itemArray[\'fileurl\'] = $itemArray[\'image_absolute\'];\\n    $itemArray[\'filepath\'] = $filesPath.$item->get(\'filename\');\\n    $itemArray[\'filesize\'] = $item->get(\'filesize\');\\n    $itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n    $itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n    $itemArray[\'image_attributes\'] = $imageAttributes;\\n    $itemArray[\'link_attributes\'] = $linkAttributes;\\n    if (!empty($scriptProperties[\'album\'])) $itemArray[\'album\'] = $scriptProperties[\'album\'];\\n    if (!empty($scriptProperties[\'tag\'])) $itemArray[\'tag\'] = $scriptProperties[\'tag\'];\\n    $itemArray[\'linkToImage\'] = $linkToImage;\\n    $itemArray[\'url\'] = $item->get(\'url\');\\n    $itemArray[\'imageGetParam\'] = $imageGetParam;\\n    $itemArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tag\'] = \'\';\\n    if ($plugin) {\\n        $plugin->renderItem($itemArray);\\n    }\\n\\n    $output[] = $gallery->getChunk($modx->getOption(\'thumbTpl\',$scriptProperties,\'galItemThumb\'),$itemArray);\\n    $idx++;\\n}\\n$output = implode(\\"\\\\n\\",$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'thumbnails\' => $output,\\n        \'album_name\' => $data[\'album\'][\'name\'],\\n        \'album_description\' => $data[\'album\'][\'description\'],\\n        \'albumRequestVar\' => $albumRequestVar,\\n        \'albumId\' => $data[\'album\'][\'id\'],\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\n\\/* set to placeholders or output directly *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->toPlaceholders(array(\\n        $toPlaceholder => $output,\\n        $toPlaceholder.\'.id\' => $data[\'album\'][\'id\'],\\n        $toPlaceholder.\'.name\' => $data[\'album\'][\'name\'],\\n        $toPlaceholder.\'.description\' => $data[\'album\'][\'description\'],\\n        $toPlaceholder.\'.total\' => $data[\'total\'],\\n    ));\\n} else {\\n    $placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'gallery.\');\\n    $modx->toPlaceholders(array(\\n        $placeholderPrefix.\'id\' => $data[\'album\'][\'id\'],\\n        $placeholderPrefix.\'name\' => $data[\'album\'][\'name\'],\\n        $placeholderPrefix.\'description\' => $data[\'album\'][\'description\'],\\n        $placeholderPrefix.\'total\' => $data[\'total\'],\\n    ));\\n    return $output;\\n}\\nreturn \'\';"}',
        'guid' => '3ceb2707421f8de17d5aeee2f029f325',
        'native_key' => 0,
        'signature' => '083792c36a59810f2ae664b53a5654d9',
      ),
      '2f78090a5463d5ad5ef50ce83dcc9d69' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"GalleryAlbums","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Loads a list of Albums\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$rowTpl = $modx->getOption(\'rowTpl\',$scriptProperties,\'galAlbumRowTpl\');\\n$rowCls = $modx->getOption(\'rowCls\',$scriptProperties,\'\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$showAll = $modx->getOption(\'showAll\',$scriptProperties,false);\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$albumCoverSort = $modx->getOption(\'albumCoverSort\',$scriptProperties,\'rank\');\\n$albumCoverSortDir = $modx->getOption(\'albumCoverSortDir\',$scriptProperties,\'ASC\');\\n$showName = $modx->getOption(\'showName\',$scriptProperties,true);\\n\\n\\/* build query *\\/\\n$albums = $modx->call(\'galAlbum\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* handle sorting for album cover *\\/\\nif ($albumCoverSort == \'rank\') {\\n    $albumCoverSort = \'AlbumItems.rank\';\\n}\\nif (in_array(strtolower($albumCoverSort),array(\'random\',\'rand()\',\'rand\'))) {\\n    $albumCoverSort = \'RAND()\';\\n    $albumCoverSortDir = \'\';\\n}\\n\\n\\/* get thumb properties for album cover *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n\\/* iterate *\\/\\n$output = array();\\n$idx = 0;\\n\\/** @var galAlbum $album *\\/\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray();\\n\\n    $coverItem = $album->getCoverItem($albumCoverSort,$albumCoverSortDir);\\n    if ($coverItem) {\\n        $albumArray[\'image\'] = $coverItem->get(\'thumbnail\',$thumbProperties);\\n        $albumArray[\'total\'] = $coverItem->get(\'total\');\\n    }\\n\\n    $albumArray[\'cls\'] = $rowCls;\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $output[] = $gallery->getChunk($rowTpl,$albumArray);\\n    $idx++;\\n}\\n\\n\\/* set output to placeholder or return *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:21:{s:6:\\"rowTpl\\";a:7:{s:4:\\"name\\";s:6:\\"rowTpl\\";s:4:\\"desc\\";s:25:\\"galleryalbums.rowtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:14:\\"galAlbumRowTpl\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"rowCls\\";a:7:{s:4:\\"name\\";s:6:\\"rowCls\\";s:4:\\"desc\\";s:25:\\"galleryalbums.rowcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"sort\\";a:7:{s:4:\\"name\\";s:4:\\"sort\\";s:4:\\"desc\\";s:23:\\"galleryalbums.sort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"dir\\";a:7:{s:4:\\"name\\";s:3:\\"dir\\";s:4:\\"desc\\";s:22:\\"galleryalbums.dir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:24:\\"galleryalbums.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:24:\\"galleryalbums.start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:32:\\"galleryalbums.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:31:\\"galleryalbums.showinactive_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"prominentOnly\\";a:7:{s:4:\\"name\\";s:13:\\"prominentOnly\\";s:4:\\"desc\\";s:32:\\"galleryalbums.prominentonly_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"parent\\";a:7:{s:4:\\"name\\";s:6:\\"parent\\";s:4:\\"desc\\";s:25:\\"galleryalbums.parent_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showAll\\";a:7:{s:4:\\"name\\";s:7:\\"showAll\\";s:4:\\"desc\\";s:26:\\"galleryalbums.showall_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"showName\\";a:7:{s:4:\\"name\\";s:8:\\"showName\\";s:4:\\"desc\\";s:27:\\"galleryalbums.showname_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:34:\\"galleryalbums.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"albumCoverSort\\";a:7:{s:4:\\"name\\";s:14:\\"albumCoverSort\\";s:4:\\"desc\\";s:33:\\"galleryalbums.albumcoversort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"albumCoverSortDir\\";a:7:{s:4:\\"name\\";s:17:\\"albumCoverSortDir\\";s:4:\\"desc\\";s:36:\\"galleryalbums.albumcoversortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:29:\\"galleryalbums.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:30:\\"galleryalbums.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:32:\\"galleryalbums.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:27:\\"galleryalbums.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:31:\\"galleryalbums.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:34:\\"galleryalbums.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Loads a list of Albums\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$rowTpl = $modx->getOption(\'rowTpl\',$scriptProperties,\'galAlbumRowTpl\');\\n$rowCls = $modx->getOption(\'rowCls\',$scriptProperties,\'\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$showAll = $modx->getOption(\'showAll\',$scriptProperties,false);\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$albumCoverSort = $modx->getOption(\'albumCoverSort\',$scriptProperties,\'rank\');\\n$albumCoverSortDir = $modx->getOption(\'albumCoverSortDir\',$scriptProperties,\'ASC\');\\n$showName = $modx->getOption(\'showName\',$scriptProperties,true);\\n\\n\\/* build query *\\/\\n$albums = $modx->call(\'galAlbum\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* handle sorting for album cover *\\/\\nif ($albumCoverSort == \'rank\') {\\n    $albumCoverSort = \'AlbumItems.rank\';\\n}\\nif (in_array(strtolower($albumCoverSort),array(\'random\',\'rand()\',\'rand\'))) {\\n    $albumCoverSort = \'RAND()\';\\n    $albumCoverSortDir = \'\';\\n}\\n\\n\\/* get thumb properties for album cover *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n\\/* iterate *\\/\\n$output = array();\\n$idx = 0;\\n\\/** @var galAlbum $album *\\/\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray();\\n\\n    $coverItem = $album->getCoverItem($albumCoverSort,$albumCoverSortDir);\\n    if ($coverItem) {\\n        $albumArray[\'image\'] = $coverItem->get(\'thumbnail\',$thumbProperties);\\n        $albumArray[\'total\'] = $coverItem->get(\'total\');\\n    }\\n\\n    $albumArray[\'cls\'] = $rowCls;\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $output[] = $gallery->getChunk($rowTpl,$albumArray);\\n    $idx++;\\n}\\n\\n\\/* set output to placeholder or return *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;"}',
        'guid' => '99526d4f34ab2d1b1dea951546834e9d',
        'native_key' => 1,
        'signature' => 'f764f140a87a7d9bad8509a193a2f24b',
      ),
      'd08bbc16bda21ed21854d32a2d9b720e' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"GalleryItem","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Display a single Gallery Item\\n *\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* get ID of item *\\/\\n$id = (int)$modx->getOption(\'id\',$scriptProperties,false);\\nif ($modx->getOption(\'checkForRequestVar\',$scriptProperties,true)) {\\n    $getParam = $modx->getOption(\'getParam\',$scriptProperties,\'galItem\');\\n    if (!empty($_REQUEST[$getParam])) { $id = (int)$_REQUEST[$getParam]; }\\n}\\nif (empty($id)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'galItem\');\\n$toPlaceholders = $modx->getOption(\'toPlaceholders\',$scriptProperties,true);\\n$toPlaceholdersPrefix = $modx->getOption(\'toPlaceholdersPrefix\',$scriptProperties,\'galitem\');\\n$albumTpl = $modx->getOption(\'albumTpl\',$scriptProperties,\'galItemAlbum\');\\n$albumSeparator = $modx->getOption(\'albumSeparator\',$scriptProperties,\',&nbsp;\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagTpl = $modx->getOption(\'tagTpl\',$scriptProperties,\'galItemTag\');\\n$tagSeparator = $modx->getOption(\'tagSeparator\',$scriptProperties,\',&nbsp;\');\\n$tagSortDir = $modx->getOption(\'tagSortDir\',$scriptProperties,\'DESC\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\n\\/* get item *\\/\\n$c = $modx->newQuery(\'galItem\');\\n$c->select($modx->getSelectColumns(\'galItem\',\'galItem\'));\\n$c->where(array(\\n    \'id\' => $id,\\n));\\n$item = $modx->getObject(\'galItem\',$c);\\nif (empty($item)) return \'\';\\n\\n\\/* setup placeholders *\\/\\n$itemArray = $item->toArray();\\n$itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n$itemArray[\'filesize\'] = $item->get(\'filesize\');\\n\\n\\/* get image+thumbnail *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n$itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n$itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n\\n\\/* get albums *\\/\\n$c = $modx->newQuery(\'galAlbum\');\\n$c->innerJoin(\'galAlbumItem\',\'AlbumItems\',$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'album\')).\' = \'.$modx->getSelectColumns(\'galAlbum\',\'galAlbum\',\'\',array(\'id\'))\\n    .\' AND \'.$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'item\')).\' = \'.$item->get(\'id\'));\\n$c->sortby(\'AlbumItems.rank\',\'ASC\');\\n$albums = $modx->getCollection(\'galAlbum\',$c);\\n$itemArray[\'albums\'] = array();\\n$i = 0;\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray(\'\',true,true);\\n    $albumArray[\'idx\'] = $i;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'albums\'][] = $gallery->getChunk($albumTpl,$albumArray);\\n    $i++;\\n}\\n$itemArray[\'albums\'] = implode($albumSeparator,$itemArray[\'albums\']);\\n\\n\\/* get tags *\\/\\n$c = $modx->newQuery(\'galTag\');\\n$c->where(array(\\n    \'item\' => $item->get(\'id\'),\\n));\\n$c->sortby(\'tag\',$tagSortDir);\\n$tags = $modx->getCollection(\'galTag\',$c);\\n$i = 0;\\n$itemArray[\'tags\'] = array();\\nforeach ($tags as $tag) {\\n    $tagArray = $tag->toArray();\\n    $tagArray[\'idx\'] = $i;\\n    $tagArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tags\'][] = $gallery->getChunk($tagTpl,$tagArray);\\n    $i++;\\n}\\n$itemArray[\'tags\'] = implode($tagSeparator,$itemArray[\'tags\']);\\n\\n\\/* if outputting to placeholders, use this, otherwise, use tpl *\\/\\nif ($toPlaceholders) {\\n    $modx->toPlaceholders($itemArray,$toPlaceholdersPrefix);\\n    return \'\';\\n}\\n\\nif (empty($tpl)) return \'\';\\n$output .= $gallery->getChunk($tpl,$itemArray);\\nreturn $output;","locked":0,"properties":"a:23:{s:2:\\"id\\";a:7:{s:4:\\"name\\";s:2:\\"id\\";s:4:\\"desc\\";s:19:\\"galleryitem.id_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"toPlaceholders\\";a:7:{s:4:\\"name\\";s:14:\\"toPlaceholders\\";s:4:\\"desc\\";s:31:\\"galleryitem.toplaceholders_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"toPlaceholdersPrefix\\";a:7:{s:4:\\"name\\";s:20:\\"toPlaceholdersPrefix\\";s:4:\\"desc\\";s:37:\\"galleryitem.toplaceholdersprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galitem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:20:\\"galleryitem.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galItem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"albumTpl\\";a:7:{s:4:\\"name\\";s:8:\\"albumTpl\\";s:4:\\"desc\\";s:25:\\"galleryitem.albumtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"galItemAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"albumSeparator\\";a:7:{s:4:\\"name\\";s:14:\\"albumSeparator\\";s:4:\\"desc\\";s:31:\\"galleryitem.albumseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\",&nbsp;\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:32:\\"galleryitem.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tagTpl\\";a:7:{s:4:\\"name\\";s:6:\\"tagTpl\\";s:4:\\"desc\\";s:23:\\"galleryitem.tagtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"galItemTag\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"tagSeparator\\";a:7:{s:4:\\"name\\";s:12:\\"tagSeparator\\";s:4:\\"desc\\";s:29:\\"galleryitem.tagseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\",&nbsp;\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tagSortDir\\";a:7:{s:4:\\"name\\";s:10:\\"tagSortDir\\";s:4:\\"desc\\";s:27:\\"galleryitem.tagsortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tagRequestVar\\";a:7:{s:4:\\"name\\";s:13:\\"tagRequestVar\\";s:4:\\"desc\\";s:30:\\"galleryitem.tagrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"galTag\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:27:\\"galleryitem.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:28:\\"galleryitem.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:30:\\"galleryitem.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:25:\\"galleryitem.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:29:\\"galleryitem.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:32:\\"galleryitem.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"imageWidth\\";a:7:{s:4:\\"name\\";s:10:\\"imageWidth\\";s:4:\\"desc\\";s:27:\\"galleryitem.imagewidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"imageHeight\\";a:7:{s:4:\\"name\\";s:11:\\"imageHeight\\";s:4:\\"desc\\";s:28:\\"galleryitem.imageheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"imageZoomCrop\\";s:4:\\"desc\\";s:30:\\"galleryitem.imagezoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"imageFar\\";a:7:{s:4:\\"name\\";s:8:\\"imageFar\\";s:4:\\"desc\\";s:25:\\"galleryitem.imagefar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"imageQuality\\";a:7:{s:4:\\"name\\";s:12:\\"imageQuality\\";s:4:\\"desc\\";s:29:\\"galleryitem.imagequality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"imageProperties\\";a:7:{s:4:\\"name\\";s:15:\\"imageProperties\\";s:4:\\"desc\\";s:32:\\"galleryitem.imageproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Display a single Gallery Item\\n *\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* get ID of item *\\/\\n$id = (int)$modx->getOption(\'id\',$scriptProperties,false);\\nif ($modx->getOption(\'checkForRequestVar\',$scriptProperties,true)) {\\n    $getParam = $modx->getOption(\'getParam\',$scriptProperties,\'galItem\');\\n    if (!empty($_REQUEST[$getParam])) { $id = (int)$_REQUEST[$getParam]; }\\n}\\nif (empty($id)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'galItem\');\\n$toPlaceholders = $modx->getOption(\'toPlaceholders\',$scriptProperties,true);\\n$toPlaceholdersPrefix = $modx->getOption(\'toPlaceholdersPrefix\',$scriptProperties,\'galitem\');\\n$albumTpl = $modx->getOption(\'albumTpl\',$scriptProperties,\'galItemAlbum\');\\n$albumSeparator = $modx->getOption(\'albumSeparator\',$scriptProperties,\',&nbsp;\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagTpl = $modx->getOption(\'tagTpl\',$scriptProperties,\'galItemTag\');\\n$tagSeparator = $modx->getOption(\'tagSeparator\',$scriptProperties,\',&nbsp;\');\\n$tagSortDir = $modx->getOption(\'tagSortDir\',$scriptProperties,\'DESC\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\n\\/* get item *\\/\\n$c = $modx->newQuery(\'galItem\');\\n$c->select($modx->getSelectColumns(\'galItem\',\'galItem\'));\\n$c->where(array(\\n    \'id\' => $id,\\n));\\n$item = $modx->getObject(\'galItem\',$c);\\nif (empty($item)) return \'\';\\n\\n\\/* setup placeholders *\\/\\n$itemArray = $item->toArray();\\n$itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n$itemArray[\'filesize\'] = $item->get(\'filesize\');\\n\\n\\/* get image+thumbnail *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n$itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n$itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n\\n\\/* get albums *\\/\\n$c = $modx->newQuery(\'galAlbum\');\\n$c->innerJoin(\'galAlbumItem\',\'AlbumItems\',$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'album\')).\' = \'.$modx->getSelectColumns(\'galAlbum\',\'galAlbum\',\'\',array(\'id\'))\\n    .\' AND \'.$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'item\')).\' = \'.$item->get(\'id\'));\\n$c->sortby(\'AlbumItems.rank\',\'ASC\');\\n$albums = $modx->getCollection(\'galAlbum\',$c);\\n$itemArray[\'albums\'] = array();\\n$i = 0;\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray(\'\',true,true);\\n    $albumArray[\'idx\'] = $i;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'albums\'][] = $gallery->getChunk($albumTpl,$albumArray);\\n    $i++;\\n}\\n$itemArray[\'albums\'] = implode($albumSeparator,$itemArray[\'albums\']);\\n\\n\\/* get tags *\\/\\n$c = $modx->newQuery(\'galTag\');\\n$c->where(array(\\n    \'item\' => $item->get(\'id\'),\\n));\\n$c->sortby(\'tag\',$tagSortDir);\\n$tags = $modx->getCollection(\'galTag\',$c);\\n$i = 0;\\n$itemArray[\'tags\'] = array();\\nforeach ($tags as $tag) {\\n    $tagArray = $tag->toArray();\\n    $tagArray[\'idx\'] = $i;\\n    $tagArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tags\'][] = $gallery->getChunk($tagTpl,$tagArray);\\n    $i++;\\n}\\n$itemArray[\'tags\'] = implode($tagSeparator,$itemArray[\'tags\']);\\n\\n\\/* if outputting to placeholders, use this, otherwise, use tpl *\\/\\nif ($toPlaceholders) {\\n    $modx->toPlaceholders($itemArray,$toPlaceholdersPrefix);\\n    return \'\';\\n}\\n\\nif (empty($tpl)) return \'\';\\n$output .= $gallery->getChunk($tpl,$itemArray);\\nreturn $output;"}',
        'guid' => '6de1c7dcf4f0039103af6530aac3aaa4',
        'native_key' => 2,
        'signature' => 'dd2b811f8e3105388aa842aa6c068350',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'category',
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'Snippets' => 
        array (
          'preserve_keys' => false,
          'update_object' => true,
          'unique_key' => 'name',
        ),
        'Chunks' => 
        array (
          'preserve_keys' => false,
          'update_object' => true,
          'unique_key' => 'name',
        ),
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'gallery',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"gallery-1.5.1-pl\\/modCategory\\/075bcab2cbcc50c2fc6270202cf81e25\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"gallery"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"gallery-1.5.1-pl\\/modCategory\\/075bcab2cbcc50c2fc6270202cf81e25\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"gallery"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '6bbe3c07843bb971eea2172ff71c02a0',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '075bcab2cbcc50c2fc6270202cf81e25',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"Gallery"}',
);