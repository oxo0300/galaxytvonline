<?php return array (
  'unique_key' => 'name',
  'preserve_keys' => false,
  'update_object' => true,
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"membercheck-1.2-beta2\\/modSnippet\\/3afc28046137bef901b34bf7c33d458c\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"membercheck"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '8b7e6f4c9e151c13b838164c4be6dfa3',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '3afc28046137bef901b34bf7c33d458c',
  'native_key' => 1,
  'object' => '{"id":1,"name":"MemberCheck","description":"1.2-beta2 - MemberCheck for MODx Revolution","editor_type":0,"category":0,"cache_type":0,"snippet":"#::::::::::::::::::::::::::::::::::::::::\\n# Snippet name: MemberCheck\\n# Short Desc: checks logged in groups and displays a chunk\\n# Version: 1.1\\n# Created By Ryan Thrash (vertexworks.com)\\n# Sanitized By Jason Coward (opengeek.com)\\n# Addition Of &default Param By Jason W. Falk (jason@falkicon.com)\\n#\\n# Date: April 03, 2007\\n#\\n# Changelog:\\n# Nov 29, 05 -- initial release\\n# Jul 13, 06 -- adjusted Singleton to work under PHP4, added placeholder code (by: garryn)\\n# Apr 02, 07 -- added &default peram code (by: Jason W. Falk (Whitefen))\\n#\\n#::::::::::::::::::::::::::::::::::::::::\\n# Description:\\n#   Checks to see if users belong to a certain group and\\n#   displays the specified chunk if they do. Performs several\\n#   sanity checks and allows to be used multiple times on a page.\\n#\\n# Params:\\n#   &groups [array] (REQUIRED)\\n#       array of webuser group-names to check against\\n#\\n#   &chunk [string] (REQUIRED)\\n#       name of the chunk to use if passes the check\\n#\\n#   &default [string] (optional)\\n#       name of the chunk to use if no webuser group-names match\\n#\\n#   &ph [string] (optional)\\n#       name of the placeholder to set instead of directly retuning chunk\\n#\\n#   &debug [boolean] (optional | false)\\n#       turn on debug mode for extra troubleshooting\\n#\\n# Example Usage:\\n#\\n#   [[MemberCheck? &groups=`siteadmin, registered users` &chunk=`privateSiteNav` &default=`publicSiteNav` &ph=`MemberMenu` &debug=`true`]]\\n#\\n#   This would place the \'members-only\' navigation store in the chunk \'privateSiteNav\'\\n#   into a placeholder (called \'MemberMenu\'). It will only do this as long as the user\\n#   is logged in as a webuser and is a member of the \'siteadmin\' or the \'registered users\'\\n#   groups. Otherwise, it will place the default chunk \'publicSiteNav\' into the \'MemberMenu\'\\n#   placeholder. The optional debug parameter can be used to display informative error messages\\n#   when configuring this snippet for your site. For example, if the developer had\\n#   mistakenly typed \'siteowners\' for the first group, and none existed with debug mode on,\\n#   it would have returned the error message: The group siteowners could not be found....\\n#\\n#::::::::::::::::::::::::::::::::::::::::\\n\\n\\/* check if inside manager *\\/\\nif (!is_object($modx->context) || ($modx->context->get(\'key\') === \'mgr\')) {\\n    return \'\'; \\/* don\'t go any further when inside manager *\\/\\n}\\n\\nif (empty($groups)) {\\n    return $debug ? \'<p>Error: No Group Specified<\\/p>\' : \'\';\\n}\\n\\nif (empty($chunk)) {\\n    return $debug ? \'<p>Error: No Chunk Specified<\\/p>\' : \'\';\\n}\\n\\n\\/* turn comma-delimited list of groups into an array *\\/\\n$groups = explode(\',\', $groups);\\n\\nif (!class_exists(\'MemberCheck\')) {\\n    $path = $modx->getOption(\'core_path\').\'components\\/membercheck\\/\';\\n    $modx->loadClass(\'membercheck\',$path,true,true);\\n}\\n$memberCheck = new MemberCheck($modx,$scriptProperties);\\n\\nif (empty($ph)) {\\n    return $memberCheck->getMemberChunk($groups, $chunk);\\n} else {\\n    $modx->setPlaceholder($ph, $memberCheck->getMemberChunk($groups, $chunk));\\n    return \'\';\\n}","locked":0,"properties":"a:5:{s:6:\\"groups\\";a:5:{s:4:\\"name\\";s:6:\\"groups\\";s:4:\\"desc\\";s:58:\\"Comma-separated list of user group names to check against.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";}s:5:\\"chunk\\";a:5:{s:4:\\"name\\";s:5:\\"chunk\\";s:4:\\"desc\\";s:50:\\"Name of the chunk to use if user passes the check.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";}s:2:\\"ph\\";a:5:{s:4:\\"name\\";s:2:\\"ph\\";s:4:\\"desc\\";s:67:\\"Name of the placeholder to set instead of directly returning chunk.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";}s:7:\\"default\\";a:5:{s:4:\\"name\\";s:7:\\"default\\";s:4:\\"desc\\";s:49:\\"Name of the chunk to use if no group names match.\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";}s:5:\\"debug\\";a:5:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:45:\\"Turn on debug mode for extra troubleshooting.\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;}}","moduleguid":""}',
);